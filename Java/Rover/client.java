import java.awt.Color;
import java.io.IOException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author josef
 */
public class client extends javax.swing.JFrame {

    /**
     * Creates new form client
     */
    public client() {
        initComponents();
        /* setto il colore della variabile che indica lo stato della connessione 
         * a Rosso*/
        labelStatoRV.setBackground(Color.red);
        /* disabilito l'input di testo nell AreaOUTPUT*/
        AreaOUTPUT.setEditable(false);
        /*disabilito i tasti e anche il tasto per fermare un eventuale 
         * connessione*/
        forwardButton.setEnabled(false);
        backButton.setEnabled(false);
        leftButton.setEnabled(false);
        rightButton.setEnabled(false);
        stopButton.setEnabled(false);
        stopConnection.setEnabled(false);
        tastieraReale.setEnabled(false);
        tastieraVirtuale.setEnabled(false);
        plusButton1.setEnabled(false);
        minusButton1.setEnabled(false);
        choiceDevices.setEnabled(false);
        choiceFunctions.setEnabled(false);
        
        
        
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        AreaOUTPUT1 = new javax.swing.JTextArea();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        forwardButton = new javax.swing.JButton();
        leftButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        rightButton = new javax.swing.JButton();
        labelStatoConnessione = new javax.swing.JLabel();
        labelStatoRV = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        labelIPServer = new javax.swing.JLabel();
        campoIPServer = new javax.swing.JTextField();
        connectionButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        AreaOUTPUT = new javax.swing.JTextArea();
        stopConnection = new javax.swing.JButton();
        tastieraReale = new javax.swing.JRadioButton();
        tastieraVirtuale = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        RoverVelocit = new javax.swing.JLabel();
        plusButton1 = new javax.swing.JButton();
        minusButton1 = new javax.swing.JButton();
        labelDispositivi = new javax.swing.JLabel();
        choiceFunctions = new java.awt.Choice();
        labelFunctions = new javax.swing.JLabel();
        choiceDevices = new java.awt.Choice();

        AreaOUTPUT1.setColumns(20);
        AreaOUTPUT1.setRows(5);
        jScrollPane2.setViewportView(AreaOUTPUT1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Client Wall-e");

        jPanel1.setBackground(new java.awt.Color(99, 208, 208));

        forwardButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        forwardButton.setForeground(new java.awt.Color(255, 0, 51));
        forwardButton.setText("Avanti");
        forwardButton.setActionCommand("JButton1");
        forwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardButtonActionPerformed(evt);
            }
        });

        leftButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        leftButton.setForeground(new java.awt.Color(255, 0, 51));
        leftButton.setText("Sinistra");
        leftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 0, 51));
        backButton.setText("Dietro");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        stopButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        stopButton.setForeground(new java.awt.Color(255, 0, 51));
        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        rightButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        rightButton.setForeground(new java.awt.Color(255, 0, 51));
        rightButton.setText("Destra");
        rightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightButtonActionPerformed(evt);
            }
        });

        labelStatoConnessione.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        labelStatoConnessione.setText("Stato Connessione");

        labelStatoRV.setBackground(new java.awt.Color(255, 255, 255));
        labelStatoRV.setText("        ");
        labelStatoRV.setOpaque(true);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        labelIPServer.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        labelIPServer.setText("IP Server");

        campoIPServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoIPServerActionPerformed(evt);
            }
        });

        connectionButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        connectionButton.setText("Connetti");
        connectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectionButtonActionPerformed(evt);
            }
        });

        AreaOUTPUT.setColumns(20);
        AreaOUTPUT.setRows(5);
        jScrollPane3.setViewportView(AreaOUTPUT);

        stopConnection.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        stopConnection.setText("Disconnetti");
        stopConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopConnectionActionPerformed(evt);
            }
        });

        buttonGroup1.add(tastieraReale);
        tastieraReale.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        tastieraReale.setText("Tastiera Reale");
        tastieraReale.setOpaque(false);
        tastieraReale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tastieraRealeActionPerformed(evt);
            }
        });

        buttonGroup1.add(tastieraVirtuale);
        tastieraVirtuale.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        tastieraVirtuale.setText("Tastiera Virtuale");
        tastieraVirtuale.setOpaque(false);
        tastieraVirtuale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tastieraVirtualeActionPerformed(evt);
            }
        });

        jLabel4.setText("Velocit√† Rover");

        RoverVelocit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        RoverVelocit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RoverVelocit.setText("0");
        RoverVelocit.setOpaque(true);

        plusButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        plusButton1.setText("+");
        plusButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusButton1ActionPerformed(evt);
            }
        });

        minusButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        minusButton1.setText("-");
        minusButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusButton1ActionPerformed(evt);
            }
        });

        labelDispositivi.setText("Dispositivi Connessi a Wall-j");

        labelFunctions.setText("Funzioni Disponibili");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(forwardButton))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(tastieraVirtuale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tastieraReale))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(leftButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(backButton)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rightButton)))
                                .addGap(12, 12, 12)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(plusButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(minusButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(39, 39, 39))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(RoverVelocit, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)))
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelIPServer)
                                .addGap(43, 43, 43)
                                .addComponent(campoIPServer, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(connectionButton)
                                .addGap(89, 89, 89)
                                .addComponent(stopConnection)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDispositivi, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(choiceDevices, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(choiceFunctions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelFunctions, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(labelStatoConnessione)
                        .addGap(46, 46, 46)
                        .addComponent(labelStatoRV)
                        .addGap(66, 66, 66))))
            .addComponent(jSeparator1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelStatoConnessione)
                            .addComponent(labelStatoRV)
                            .addComponent(labelIPServer)
                            .addComponent(campoIPServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(connectionButton)
                            .addComponent(stopConnection)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(choiceFunctions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelDispositivi)
                                .addComponent(labelFunctions))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(choiceDevices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tastieraVirtuale)
                                    .addComponent(tastieraReale))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(105, 105, 105)
                                        .addComponent(forwardButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(leftButton)
                                            .addComponent(stopButton)
                                            .addComponent(rightButton))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(backButton))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(RoverVelocit, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(22, 22, 22)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(minusButton1)
                                            .addComponent(plusButton1)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(94, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoIPServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoIPServerActionPerformed

    }//GEN-LAST:event_campoIPServerActionPerformed

    private void connectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectionButtonActionPerformed
        tastieraReale.setEnabled(true);
        tastieraVirtuale.setEnabled(true);
        
        try {
            Connection conn=new Connection();
        } catch (UnknownHostException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_connectionButtonActionPerformed

    private void stopConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopConnectionActionPerformed
        try {
            Connection.CloseConnection();
        } catch (IOException ex) {
            Logger.getLogger(client.class.getName()).log(Level.SEVERE, null, ex);
        }
            /*rendo visibile il tasto per la connessione*/
            connectionButton.setEnabled(true);
            /*setto la label per la connessione a Rosso*/
            labelStatoRV.setBackground(Color.red);
            /* disabilito il tasto stopConnection*/
            stopConnection.setEnabled(false);
            /*abilito il campo per l'inserimento dell IP*/
            campoIPServer.setEnabled(true);
       
       
    }//GEN-LAST:event_stopConnectionActionPerformed

    private void tastieraRealeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tastieraRealeActionPerformed
        ModificaVelocit.RealChoice=true;   
        tastieraVirtuale.setEnabled(false);
        plusButton1.setEnabled(true);
        minusButton1.setEnabled(true);
    }//GEN-LAST:event_tastieraRealeActionPerformed

    private void tastieraVirtualeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tastieraVirtualeActionPerformed
        tastieraReale.setEnabled(false);
        plusButton1.setEnabled(true);
        minusButton1.setEnabled(true);
        /*rendo visibili i tasti per i comandi*/
        client.forwardButton.setEnabled(true);
        client.backButton.setEnabled(true);
        client.leftButton.setEnabled(true);
        client.rightButton.setEnabled(true);
        client.stopButton.setEnabled(true);
    }//GEN-LAST:event_tastieraVirtualeActionPerformed

    private void forwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardButtonActionPerformed
			Connection.out.println(" 1" + RoverVelocit.getText());
    }//GEN-LAST:event_forwardButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
                        Connection.out.println(" 50");
    }//GEN-LAST:event_stopButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
  			Connection.out.println(" 2" + RoverVelocit.getText());
    }//GEN-LAST:event_backButtonActionPerformed

    private void rightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightButtonActionPerformed
 			Connection.out.println(" 4" + RoverVelocit.getText());
    }//GEN-LAST:event_rightButtonActionPerformed

    private void leftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftButtonActionPerformed
                        Connection.out.println(" 3" + RoverVelocit.getText());
    }//GEN-LAST:event_leftButtonActionPerformed

    private void plusButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusButton1ActionPerformed
        ModificaVelocit v=new ModificaVelocit();   
         v.start(true);
    }//GEN-LAST:event_plusButton1ActionPerformed

    private void minusButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusButton1ActionPerformed
        ModificaVelocit v=new ModificaVelocit();
         v.start(false);
    }//GEN-LAST:event_minusButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new client().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextArea AreaOUTPUT;
    public static javax.swing.JTextArea AreaOUTPUT1;
    public static javax.swing.JLabel RoverVelocit;
    public static javax.swing.JButton backButton;
    private javax.swing.ButtonGroup buttonGroup1;
    public static javax.swing.JTextField campoIPServer;
    public static java.awt.Choice choiceDevices;
    public static java.awt.Choice choiceFunctions;
    public static javax.swing.JButton connectionButton;
    public static javax.swing.JButton forwardButton;
    private javax.swing.JLabel jLabel4;
    public static javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel labelDispositivi;
    private javax.swing.JLabel labelFunctions;
    private javax.swing.JLabel labelIPServer;
    private javax.swing.JLabel labelStatoConnessione;
    public static javax.swing.JLabel labelStatoRV;
    public static javax.swing.JButton leftButton;
    public static javax.swing.JButton minusButton1;
    public static javax.swing.JButton plusButton1;
    public static javax.swing.JButton rightButton;
    public static javax.swing.JButton stopButton;
    public static javax.swing.JButton stopConnection;
    private javax.swing.JRadioButton tastieraReale;
    private javax.swing.JRadioButton tastieraVirtuale;
    // End of variables declaration//GEN-END:variables
}
